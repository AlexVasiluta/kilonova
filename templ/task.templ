{{ template "util/header" . }}

<div class="container">
	{{ $editor := .TaskEditor }}
	{{ with .Task }}
		<h2>Task {{ .ID }}</h2>
		<p>Data încărcării: {{ .CreatedAt }}</p>
		<p>Status: {{ taskStatus .Status }}</p>
		<p>Limbaj: {{ .Language }}</p>
		<p>Problemă: <a href="/probleme/{{.Problem.ID}}">{{ .Problem.Name }}</a></p>
		<p>Scor: {{ .Score }} </p>
		<p>Eroare de compilare?: {{ .CompileError }}</p>
		
		{{ with .CompileMessage }}

		<h6>Mesaj Evaluare:</h6>
		<pre>{{- . -}}</pre>
		
		{{ end }}

		{{ if not .CompileError }}
			{{ with .Tests }}
				<table class="table table-striped">
						<thead class="thead-dark">
						<tr>
							<th scope="col">
								ID
							</th>
							<th scope="col">
								Status
							</th>
							<th scope="col">
								Scor posibil
							</th>
							<th scope="col">
								Scor obținut
							</th>
							<th scope="col">
								Timp
							</th>
							<th scope="col">
								Memorie utilizată
							</th>
							<th scope="col">
								Gata
							</th>
						</tr>
					</thead>
					<tbody>
						{{ range . }}
						<tr style="{{ gradient .Score .Test.Score }}">
							<th scope="col">
								{{- .Test.VisibleID -}}
							</th>
							<td>
								{{- .Output -}}
							</td>
							<td>
								{{- .Test.Score -}}
							</td>
							<td>
								{{- .Score -}}
							</td>
							<td>
								{{- printf "%.2f" .Time -}}
							</td>
							<td>
								{{- .Memory -}}KB
							</td>
							<td>
								{{- .Done -}}
							</td>
						</tr>
						{{ end }}
					</tbody>
				</table>
			{{ end }}
		{{ end }}

		{{ if not (eq .SourceCode "") }}
			<h3>Codul Sursă:</h3>
			<pre><code class="{{ .Language }}">{{ .SourceCode }} </code></pre>
			
			{{ if $editor }}
				<button id="vButton" class="btn btn-primary mb-2" onclick="toggleVisible()">Fă codul {{ if .Visible}}invizibil{{else}}vizibil{{end}}</button>

				<script>
					let visible = {{ .Visible }};
					let id = {{ .ID }};

					async function toggleVisible() {
						visible = !visible;
						let res = await postCall("/tasks/setVisible", {visible, id});
						createToast({
							status: res.status,
							title: (res.status == "success" ? (visible ? "Made visible" : "Made invisible") : "Error changing visibility"),
							description: res.data
						});

						$("#vButton").html(`Fă codul ${visible ? "invizibil" : "vizibil"}`)
					}
				</script>
			{{ end }}

		{{ end }}
	{{ end }}
</div>

{{ template "util/footer" . }}
