syntax = "proto3";

option go_package = "github.com/KiloProjects/Kilonova/internal/grpc";

package eval;

// Eval does something
service Eval {
	
	// Compile compiles a program, to be used for later execution
	rpc Compile(CompileRequest) returns (CompileResponse) {}

	// Execute runs a stream of tests, returning their output
	// warning: the executable for the ID will be deleted after this is finished
	rpc Execute(stream Test) returns (stream TestResponse) {}

}

message CompileRequest {
	int32 ID = 1; // ID that corresponds to the submission
	string code = 2; // source code to compile
	string lang = 3; // language key
}

message CompileResponse {
	// int32 ID = 1; // ID that corresponds to the submission
	string output = 2; // compilation output
	bool success = 3; // determine if it was a successful compilation
	string other = 4; // other useful errors
}

message Test {
	int32 ID = 1; // ID of executable to run
	int32 TID = 2; // ID of the test that is run, used for TestResponse, might delete
	bytes input = 3; // test input
	string filename = 4; // either stdin, or a filename to use for output
	double time_limit = 5; // time limit
	int32 memory_limit = 6; // memory limit
	int32 stack_limit = 7; // stack limit
	string lang = 8; // language
}

message TestResponse {
	int32 TID = 1; // the tid specified in test
	bytes output = 2; // program output
	double time = 3; // time taken
	int32 memory = 4; // memory usage
	int32 status = 5; // exit status
	string comments = 6; // extra comments
}
