{{ template "util/header" . }}

<div class="c-container">
	{{ $editor := .SubEditor }}
	{{ $problem := subProblem .Submission }}
	{{ $author := subAuthor .Submission }}
	{{ with .Submission }}
		<h2>Submission {{ .ID }}</h2>
		<p>Autor: {{ $author.Name }}</p>
		<p>Data încărcării: <span id="sub-{{.ID}}"></span></p>
		<script>
			$("#sub-{{.ID}}").text(dayjs.unix({{timeToUnix .CreatedAt}}).format('DD/MM/YYYY HH:mm'))
		</script>
		<p>Status: {{ subStatus .Status }}</p>
		<p>Limbaj: {{ .Language }}</p>
		<p>Problemă: <a href="/probleme/{{$problem.ID}}">{{ $problem.Name }}</a></p>
		<p>Scor: {{ .Score }} </p>
			
		{{ if and .CompileError.Valid .CompileError.Bool }}
		
		<p>Eroare de compilare?: {{ .CompileError.Bool }}</p>

		<h5>Mesaj Evaluare:</h5>
		<pre>{{- .CompileMessage.String -}}</pre>
		
		{{ end }}

		{{ if not .CompileError.Bool }}
			{{ with (subTests .) }}
				<table class="border-2 border-collapse table-auto w-full">
					<thead>
						<tr>
							<th class="py-2" scope="col">
								ID
							</th>
							<th scope="col">
								Timp
							</th>
							<th scope="col">
								Memorie
							</th>
							<th scope="col">
								Verdict
							</th>
							<th scope="col">
								Scor
							</th>
						</tr>
					</thead>
					<tbody>
						{{ range . }}
							{{ $test := getTest .TestID }}
							{{ if .Done }}
							<tr class="text-center border-t" style="{{ gradient .Score $test.Score }}">
							{{ else }}
							<tr class="text-center border-t">
							{{ end }}
								<th class="py-3" scope="row">
									{{- $test.VisibleID -}}
								</th>
								<td>
									{{- printf "%.2f" .Time -}}
								</td>
								<td>
									{{- .Memory -}}KB
								</td>
								<td>
									{{ if .Done }}
										{{- .Verdict -}}
									{{ else }}
									<div class="fas fa-spinner animate-spin" role="status"></div>
										Waiting...
									{{ end }}
								</td>
								<td>
									{{- .Score -}}/{{- $test.Score -}}
								</td>
							</tr>
						{{ end }}
					</tbody>
				</table>
			{{ end }}
		{{ end }}

		{{ if not (eq .Code "") }}
			<h3>Codul Sursă:</h3>
			<pre><code class="{{ .Language }}">{{ .Code }} </code></pre>
			
			{{ if $editor }}
				<button id="vButton" class="btn btn-blue mb-2 text-semibold text-lg" onclick="toggleVisible()"><i class="fas fa-share-square mr-2"></i> Fă codul {{if .Visible}}invizibil{{else}}vizibil{{end}}</button>

				<script>
					let visible = {{ .Visible }};
					let id = {{ .ID }};

					async function toggleVisible() {
						visible = !visible;
						let res = await postCall("/submissions/setVisible", {visible, id});
						createToast({
							status: res.status,
							title: (res.status == "success" ? (visible ? "Made visible" : "Made invisible") : "Error changing visibility"),
							description: res.data
						});

						$("#vButton").html(`<i class="fas fa-share-square mr-2"></i> Fă codul ${visible ? "invizibil" : "vizibil"}`)
					}
				</script>
			{{ end }}

		{{ end }}
	{{ end }}
</div>

{{ template "util/footer" . }}
